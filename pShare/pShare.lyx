#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{verbatim}
%\usepackage{xcolor}
\usepackage{listings}
\lstdefinestyle{Bash}
{language=bash,
keywordstyle=\color{blue},
basicstyle=\ttfamily,
morekeywords={moosuser@machine},
alsoletter={:~$},
morekeywords=[2]{moosuser@machine:},
keywordstyle=[2]{\color{red}},
literate={\$}{{\textcolor{red}{\$}}}1 
         {:}{{\textcolor{red}{:}}}1
         {~}{{\textcolor{red}{\textasciitilde}}}1,
}

\usepackage{colortbl}
\definecolor{bkg}{rgb}{0.95, 0.95, 0.95}

\usepackage[usenames,dvipsnames]{xcolor}

\usepackage{listings}

\lstset{
tabsize=4,
language=matlab,
        basicstyle=\footnotesize,
        %upquote=true,
        aboveskip={1.5\baselineskip},
        columns=fixed,
        showstringspaces=false,
        extendedchars=true,
        breaklines=true,
        prebreak = \raisebox{0ex}[0ex][0ex]{\ensuremath{\hookleftarrow}},
frame=single,
        showtabs=false,
        showspaces=false,
        showstringspaces=false,
        identifierstyle=\ttfamily,
        keywordstyle=\color[rgb]{0,0,1},
        commentstyle=\color[rgb]{0.133,0.545,0.133},
        stringstyle=\color[rgb]{0.627,0.126,0.941},
language=c++
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Bridging MOOS Communities with 
\family typewriter
pShare
\family default
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
MOOS-V10 brings with it a new command line application which allows data
 to be shared between MOOS communities.
 Recall that in MOOS parlance a 
\begin_inset Quotes eld
\end_inset

community
\begin_inset Quotes erd
\end_inset

is a the set of programms talking to a particular instance of a 
\family typewriter
MOOSDB
\family default
 including the 
\family typewriter
MOOSDB
\family default
 itself.
 In some ways 
\family typewriter
pShare
\family default
 is just a modern, better written version of 
\family typewriter
pMOOSBridge
\family default
 in others it offers much greater flexibility and functionality.
 Here is a quick summary of 
\family typewriter
pShare
\family default
 functionality
\end_layout

\begin_layout Itemize
Offers UDP communication between communities
\end_layout

\begin_layout Itemize
Can share data over multicast channels
\end_layout

\begin_layout Itemize
Supports wildcard forwarding and renaming of variable
\end_layout

\begin_layout Itemize
Supports dynamic configuration (via MOOS) of sharing/forwarding/renaming
\end_layout

\begin_layout Itemize
Supports command line configuration and from a .moos file
\end_layout

\begin_layout Standard
It is worth, straight off the bat, understanding how in usage terms 
\family typewriter
pShare
\family default
 is different from 
\family typewriter
pMOOSBridge
\end_layout

\begin_layout Itemize

\family typewriter
pShare
\family default
 unlike 
\family typewriter
pMOOSBridge
\family default
 only supports UDP (or multicast which is a kind of UDP)
\end_layout

\begin_layout Itemize
You need one instance of pShare per community (compare this to 
\family typewriter
pMOOSBridge
\family default
 where a single instance could be used to bridge any number of communities)
\end_layout

\begin_layout Itemize
Currently 
\family typewriter
pShare
\family default
 only supports sharing of up to 64K messages
\end_layout

\begin_layout Subsection
Why UDP ?
\end_layout

\begin_layout Standard
UDP is, of course, a lossy affair - there is no guarrantee that messages
 will get through and indeed 
\family typewriter
pShare
\family default
 is intended for use in just such situations.
 Use 
\family typewriter
pShare
\family default
 when you want, when possible, to get messages between communities but you
 don't mind dropping a few messages.
 Perhaps this applies when you have a deployed robot out in the wilds and
 the wireless link simply doesn't suport tcp/ip as well as you might hope.
 
\begin_inset Foot
status open

\begin_layout Plain Layout
If you do mind loosing things then you must use tcp/ip (standard MOOS) and
 if you have a lossy connection you will spend years waiting for data.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Basic Operation
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-simple-use"

\end_inset

 shows a typical and simple use case of 
\family typewriter
pShare.
 
\family default
Here two communities are linked by two instances of 
\family typewriter
pShare.
 
\family default
Each is connected to a MOOSDB and each pShare is configured (by a means
 we will get to in a minute) to subscribe to messages from the 
\family typewriter
MOOSDB
\family default
 (issued by clients).
 These messages are forwarded over a udp link to the other 
\family typewriter
pShare
\family default
 instance which inserts them into it's own 
\family typewriter
MOOSDB.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/SimpleShare.pdf
	width 80col%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
A simple use of 
\family typewriter
pShare: 
\family default
two communities are linked by two instances of pShare - one in each community.
\begin_inset CommandInset label
LatexCommand label
name "fig:A-simple-use"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
A more complicated (marginally) example is show in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:multi-share"

\end_inset

 .
 Here the left hand community is sharing as an output data to the top right
 and bottom right communities but only receiving data from the bottom right.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/MultipleShare.pdf
	width 80col%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
A simple use of 
\family typewriter
pShare: 
\family default
two communities are linked by two instances of pShare - one in each community.
\begin_inset CommandInset label
LatexCommand label
name "fig:multi-share"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Different Ways Sharing
\end_layout

\begin_layout Standard
Each instance of 
\family typewriter
pShare
\family default
 can be configured to such that it can
\end_layout

\begin_layout Itemize
forward a named message (like 'X') to any number of specific udp ports on
 any number of machines
\end_layout

\begin_layout Itemize
can rename a message before forwarding
\end_layout

\begin_layout Itemize
receive and forward on to its own 
\family typewriter
MOOSDB
\family default
 messages from any number of other 
\family typewriter
pShares
\end_layout

\begin_layout Itemize
forward messages on predefined or any number of user defined multicast channel
 
\end_layout

\begin_layout Itemize
receive messages on any number of multicast channels
\end_layout

\begin_layout Standard
how to do this is best explained with some examples and that will happen
 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example-Configurations"

\end_inset

.
 Before that it is worth explaining the merit of multicast channels.
\end_layout

\begin_layout Subsection
Sharing via Multicast Channels
\end_layout

\begin_layout Standard
Imagine you as an application developer knew that other communities (but
 you do not know which ones 
\emph on
a-priori
\emph default
) would be interested in a variable called 
\family typewriter
X.
 
\family default
Now if you knew exactly who wanted it you could configure a standard UDP
 shares to mutually agreed ports (presumably one port per community) on
 which other 
\family typewriter
pShares
\family default
 are listening.
 But you don't.
 So what to do? Well you could use 
\family typewriter
pShare's
\family default
 ability for packets to predefine multicast channels ( these are really
 simply multicast addresses behind the scenes) you can tell pShare to forward
 MOOS messages out to a multicast_channel and later on any number of other
 
\family typewriter
pShare
\family default
 instances can subscribe to this channel and receive them.
\end_layout

\begin_layout Section
The form of command line configuration strings
\end_layout

\begin_layout Standard
The '-o' switch allows you to configure which messages to forward, how to
 rename them and where to send them.
 At its highest level the the '-o' switch is followed by a comma separated
 list of 
\end_layout

\begin_layout Description
mappings: 
\begin_inset Quotes eld
\end_inset


\family typewriter
-o= mapping , mapping, mapping,..
\family default
.
\begin_inset Quotes erd
\end_inset

 and each mapping describes how one MOOS variable is routed to any number
 of destinations.
 Each mapping contains mulitple...
\end_layout

\begin_layout Description
routes and has the form of 
\begin_inset Quotes eld
\end_inset


\family typewriter
var_name->route & route...
\family default

\begin_inset Quotes erd
\end_inset

 so a variable name pointing to an ampersand separated list of 
\begin_inset Quotes eld
\end_inset

routes
\begin_inset Quotes erd
\end_inset

.
 Each route describes a...
\end_layout

\begin_layout Description
destination for a message and it has the format 
\family typewriter

\begin_inset Quotes eld
\end_inset

new_name:destination_address:destination_port
\begin_inset Quotes erd
\end_inset


\family default
 or 
\begin_inset Quotes eld
\end_inset


\family typewriter
new_name:multicast_channel
\family default

\begin_inset Quotes erd
\end_inset

.
 The new_name part can be ommited in which case the variable is not renamed.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:output_format"

\end_inset

 describes this hiearchy pictorially and some concrete examples are given
 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example-Configurations"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/output_format.pdf
	width 80col%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Specifying 
\family typewriter
pShare
\family default
 forwarding behaviour from the command line.
 Examples are given in
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example-Configurations"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:output_format"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Command line Configurations
\begin_inset CommandInset label
LatexCommand label
name "sub:Example-Configurations"

\end_inset


\end_layout

\begin_layout Standard
Imagine we have two communities A and B.
 Lets also assume that they reside on different machines.
 Machine A has ip address 192.168.0.10 and machine B has ip address 192.168.0.4.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
share X from A to B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->192.168.0.4:10000' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=localhost:10000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
share X from A to B as Y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->Y:192.168.0.4:10000'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=localhost:10000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
share X from A to B as X and Y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->92.168.0.4:10000 & Y:192.168.0.4:10000'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=localhost:10000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
share X from A to B as X and Y via two different ports
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->92.168.0.4:10000 & Y:192.168.0.4:20000'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=localhost:10000,localhost:20000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
share X and Y to B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->192.168.0.4:10000 , Y->192.168.0.4:10000'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=localhost:10000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share X via multicast
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share X via multicast and rename
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->Y:multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share X on several channels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->Y:multicast_7 & Z:multicast_3' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share X via multicast and rename
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->Y:multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=multicast_7,multicast_3
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share X as several new variables on the same multicast channel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-o='X->Y:multicast_7 & Z:multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
Tip: 
\series default
don't forget to put single quotes around the routing directives to prevent
 your shell from interpretting the '>' character.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Configuring pShare from a .moos file
\end_layout

\begin_layout Standard
We have seen some examples on how to configure 
\family typewriter
pShare
\family default
 on the command line (because that is insanely useful) but of course it
 can also be configured by reading a configuration block in a .moos file
 just like any 
\family typewriter
MOOSApp 
\family default
can.
 The key parameter names are
\end_layout

\begin_layout Description
Output which can have the same format as the -o flag on the command line
 or a more verbose as illustrated below.
 There can be as many 
\begin_inset Quotes eld
\end_inset

Output
\begin_inset Quotes erd
\end_inset

 directives in a configuration block as you need.
 The verbose form specifies one share per invocation while the compact form
 specifies as many as you wish.
 The verbose form of the Output directive is a tuple of token value pairs
 where the tokens are 
\end_layout

\begin_deeper
\begin_layout Description
src_name the name of the varible ot be shared
\end_layout

\begin_layout Description
dest_name the name it should have when it arrives at its destination - this
 is optional, if it is not present then no renaming occurs
\end_layout

\begin_layout Description
route a description of the route which could be for udp shares hostname:port:udp
 or for multicast shares 
\begin_inset Quotes eld
\end_inset

multicast_X
\begin_inset Quotes erd
\end_inset

.
 This is much as it is for the command line configuration.
\end_layout

\end_deeper
\begin_layout Description
Input which can have the same dense format as the -i flag on the command
 line as described above or a more verbose, intuitive form illustrated below.
 In the long hand version you use a single token value pair with a token
 name of 
\begin_inset Quotes eld
\end_inset


\series bold
route
\series default

\begin_inset Quotes erd
\end_inset

 as described above.
 This specifies the fashion in which this instance of pShare should listen
 - be that on mulitple ports for udp traffic or on a multicast channel for
 multicast action.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[caption={Configuring pShare from a configuration block}]{example
s/pShare.moos}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Wildcard Sharing
\end_layout

\begin_layout Standard
It won't have escaped your attention that MOOS-V10 offers support for wildcardin
g -that is specifying a pattern which represents a whole set of named variables.(
So for example `*' means all variables because the regular expressions character
 `*' matches all sets of characters).
 
\family typewriter
pShare 
\family default
can utilise this functionality to make sharing many variables trivial.
 You can also specify to only share variables from a specific process.
 
\end_layout

\begin_layout Standard
So lets start with a command line example.
 We can share all variables in a community thus:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share all variables onto channel 7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-o='*->multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
And we can be a little more precise and only forward variables which begin
 with the letters 
\begin_inset Quotes eld
\end_inset

SP
\begin_inset Quotes erd
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share all variables onto channel 7 which begin with 
\begin_inset Quotes eld
\end_inset

SP
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-o='SP*->multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or which begin with 
\begin_inset Quotes eld
\end_inset

K
\begin_inset Quotes erd
\end_inset

 end with 
\begin_inset Quotes eld
\end_inset

X
\begin_inset Quotes erd
\end_inset

 followed by any single character
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
starting with X ending with a K plus 1 character
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-o='X*K?->multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can also be explict about which processes we want to forward from.
 So for example say we just wanted to forward messages from teh process
 called 
\begin_inset Quotes eld
\end_inset

GPS
\begin_inset Quotes erd
\end_inset

:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share all variables from 
\begin_inset Quotes eld
\end_inset

GPS
\begin_inset Quotes erd
\end_inset

 onto channel 7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-o='*:GPS->multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
And of course the process name also supports wild cards so we we can do
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
var ending in 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

 from a proc starting 
\begin_inset Quotes eld
\end_inset

camera_
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-o='*time:camera_*->multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A good question is what does it mean to rename a wildcard share ? Well that
 simply serves as suffix to the shared variable name
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
share all variables onto channel 7 with renaming
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal A command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-o='*->T:multicast_7' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
terminal B command line
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
-i=multicast_7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
which means a variable 
\begin_inset Quotes eld
\end_inset

X
\begin_inset Quotes erd
\end_inset

 will be shared as 
\begin_inset Quotes eld
\end_inset

TX
\begin_inset Quotes erd
\end_inset

 - the parameter T is acting as suffix.
 Similarly a variable called 
\begin_inset Quotes eld
\end_inset

donkey
\begin_inset Quotes erd
\end_inset

 would endup being shared in this example as 
\begin_inset Quotes eld
\end_inset

Tdonkey
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
Finally of course wildcard shares can be specified in configuration files
 as shown below.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[caption={Configuring pShare from a configuration block}]{example
s/pShareWild.moos}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Instigating Dynamic Shares On The Fly
\end_layout

\begin_layout Standard

\family typewriter
pShare
\family default
 can be told to start sharing data dynamically by any MOOS Process simply
 by publishing a correctly formatted string.
 The format is simple - its is pretty much the same as a line in a configuration
 file.
 You need to write a string 
\family typewriter

\begin_inset Quotes eld
\end_inset

cmd = <directive>
\begin_inset Quotes erd
\end_inset

 
\family default
 to the variable 
\family typewriter
PSHARE_CMD
\family default
 where 
\family typewriter
<directive>
\family default
 is a output or input directive such as you would write in a configuration
 file.
 Here are some examples:
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

cmd = Output = src_name = X?, route = localhost:9021
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

 cmd = Output = src_name =T, dest_name = TT, route=192.3.4.5:9832
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
The ability to dynamically instigate shares turns out to be very useful
 if you don't know what needs to be shared when 
\family typewriter
pShare
\family default
 first starts and that only gets figured out by other processes.
\end_layout

\end_body
\end_document
